user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;
events {
    worker_connections  1024;
}
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    upstream backend { # backend is a arbitrary upstream name.
        server 10.0.134.154:3000; #private IP of expressjs instance inside a private VPC subnet.
        keepalive 1024;
    }
    server {
        listen 80; # nginx를 통해 외부로 노출되는 port. 
        # if I change it to listen 80, it always directs to look inside local /usr/share/nginx/html/ directory. 
        #It never upstreams to expressjs backend servers. Not sure why.

        location / {
            root    /usr/share/nginx/html/;
        }
        location /api/ {
            proxy_pass      http://backend/api/;  # uses the already-set upstream
        }
        
    }
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;
    #include /etc/nginx/conf.d/*.conf;


    #server {
    #listen       80;
    # listen  [::]:80;
    #server_name  localhost;

    # #access_log  /var/log/nginx/host.access.log  main;

    #location / {
    #    root   /usr/share/nginx/html;
    #    index  index.html index.htm;
    #}
    #...(omitted)
    #}

    #The above is a server directive found on /etc/nginx/conf.d/default.conf, 
    #which is included in this setting file by the include statement commented above.
    #This overrides server directive directly embedded in this file when it is listening to port 80.
    #Therefore, it overrides upstreaming(proxy_pass) settings directly embedded in this file.
}
