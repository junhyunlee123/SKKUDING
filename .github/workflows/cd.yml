name: Continuous Deployment


on: 
    push:
        branches: [main]
jobs:
    AWS_S3_Sync:
        name: AWS S3 Sync
        runs-on: ubuntu-latest
        permissions:
            id-token: write
            contents: read
        
        steps:
          - name: Checkout repository
            uses: actions/checkout@v4

          - name: Configure AWS Credentials
            uses: aws-actions/configure-aws-credentials@v4
            with:
                aws-region: ap-northeast-2
                role-to-assume: arn:aws:iam::533267359186:role/GithubAction
                role-session-name: S3Access

          - name: Upload HTML, CSS, Javascript files to S3
            run: aws s3 sync S3_files s3://tf-files-for-nginx-expressjs-project/
    Update_ECR_Container:
        name: Update_ECR_Container
        runs-on: ubuntu-latest
        permissions:
            id-token: write
            contents: read
        
        steps:
          - name: Checkout repository
            uses: actions/checkout@v4

          - name: Configure AWS Credentials
            uses: aws-actions/configure-aws-credentials@v4
            with:
                aws-region: ap-northeast-2
                role-to-assume: arn:aws:iam::533267359186:role/GithubAction
          
          - name: Login to Amazon ECR
            id: login-ecr
            uses: aws-actions/amazon-ecr-login@v2

          - name: Build, tag, and push docker image to Amazon ECR
            env:
                REGISTRY: ${{ steps.login-ecr.outputs.registry }}
                REPOSITORY: skkuding_expressjs
                IMAGE_TAG: ${{ github.sha }}
            run: |
                docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
                docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG    

